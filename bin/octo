#!/bin/bash

# Directories and domain names.
SRC_DIR="/home/git/src/"
PUBLIC_IP=$(curl -s http://ipv4.icanhazip.com)
DOMAIN_SUFFIX="$PUBLIC_IP.xip.io"

case "$1" in

  status)
    cd $SRC_DIR
    for i in *; do
      site=`basename $i .git`
      if (wget -S -t 1 -T 2 --delete-after -qO- http://$site.$DOMAIN_SUFFIX 2>&1 | grep -q "HTTP/1.1 200 OK"); then
        echo -e "$site: \e[32mOK\e[0m"
      else
        echo -e "$site: \e[31mDOWN\e[0m"
      fi
    done
    ;;
  
  clean)
    echo "Cleaning old exited containers."
    # TODO: Errors if there's no containers - annoying.
    docker ps -a | grep "Exit" | cut -d ' ' -f 1 | xargs docker rm
    echo "Showing all remaining containers."
    docker ps -a
    ;;
  
  remove)
    if [ $1 ]; then
      rm -rf /home/git/$1.git
      if [ -d /home/git/src/$1.git ]; then rm -rf /home/git/src/$1.git; fi
      OLD_ID=$(docker ps | grep "$1:latest" | cut -d ' ' -f 1)
      if [ $OLD_ID ]; then docker kill $OLD_ID; fi
    else
      echo "Need the name to remove."
    fi
    ;;

  restart)
    if [ $2 ]; then
      echo "Restarting $2."
      newrev=`cd /home/git/$2.git; git log . | head -1 | cut -d ' ' -f 2`
      cd /home/git/$2.git; git archive $newrev | /home/git/receiver "$2" "$newrev" "git" "NOTHING HERE"  
      rm -rf /home/git/src/$2
    else
      echo "Need a site to restart."
    fi
    ;;

  *)
    echo "Usage: octo status|clean|restart \$site"
    ;;
esac 